<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MyDBA</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mydba.xyz/"/>
  <updated>2016-08-18T10:30:22.683Z</updated>
  <id>http://mydba.xyz/</id>
  
  <author>
    <name>冬日暖阳</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安装  percona-zabbix-templates</title>
    <link href="http://mydba.xyz/2016/08/18/percona-zabbix-templates/"/>
    <id>http://mydba.xyz/2016/08/18/percona-zabbix-templates/</id>
    <published>2016-08-18T10:01:53.000Z</published>
    <updated>2016-08-18T10:30:22.683Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Centos 6.5<br>zabbix 2.4.6<br>mysql5.7.9</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="安装php-php-mysql"><a href="#安装php-php-mysql" class="headerlink" title="安装php php-mysql"></a>安装php php-mysql</h3><h4 id="1-安装-php5-6-的源"><a href="#1-安装-php5-6-的源" class="headerlink" title="1. 安装 php5.6 的源"></a>1. 安装 php5.6 的源</h4>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh http://ftp.iij.ad.jp/pub/linux/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm   </div><div class="line">rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm</div></pre></td></tr></table></figure>
<h4 id="2-安装-php5-6"><a href="#2-安装-php5-6" class="headerlink" title="2. 安装 php5.6"></a>2. 安装 php5.6</h4>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install --enablerepo=remi --enablerepo=remi-php56 php php-opcache php-devel php-mbstring php-mcrypt php-mysqlnd php-phpunit-PHPUnit php-pecl-xdebug php-pecl-xhprof</div></pre></td></tr></table></figure>
<h4 id="3-测试php安装成功"><a href="#3-测试php安装成功" class="headerlink" title="3. 测试php安装成功"></a>3. 测试php安装成功</h4>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php -v</div></pre></td></tr></table></figure>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="1-安装-percona-的-repository"><a href="#1-安装-percona-的-repository" class="headerlink" title="1. 安装 percona 的 repository"></a>1. 安装 percona 的 repository</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm</div></pre></td></tr></table></figure>
<h3 id="2-Configure-Zabbix-Agent"><a href="#2-Configure-Zabbix-Agent" class="headerlink" title="2. Configure Zabbix Agent"></a>2. Configure Zabbix Agent</h3><ol>
<li><p>安装模板</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install percona-zabbix-templates</div></pre></td></tr></table></figure>
<p>模板安装在下列位置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Scripts are installed to  /var/lib/zabbix/percona/scripts  </div><div class="line">Templates are installed to /var/lib/zabbix/percona/templates</div></pre></td></tr></table></figure>
</li>
<li><p>复制 模板配置文件 <code>/var/lib/zabbix/percona/templates/userparameter_percona_mysql.conf</code> 到 zabbix agent 配置目录 <code>/usr/local/zabbix_agent/etc/zabbix_agentd.conf.d</code></p>
</li>
<li><p>编辑<code>zabbix_agentd.conf</code>,包含模板配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Include=/usr/local/zabbix_agent/etc/zabbix_agentd.conf.d/</div></pre></td></tr></table></figure>
</li>
<li><p>重启zabbix-agent</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service zabbix-agentd restart</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="3-配置MySQL-connectivity-on-Agent"><a href="#3-配置MySQL-connectivity-on-Agent" class="headerlink" title="3. 配置MySQL connectivity on Agent"></a>3. 配置MySQL connectivity on Agent</h3><ol>
<li><p>创建php 连接mysql 的配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">vim /var/lib/zabbix/percona/scripts/ss_get_mysql_stats.php.cnf</div><div class="line"></div><div class="line"># 添加如下内容,修改为自己mysql的用户名，密码，端口</div><div class="line">&lt;?php   </div><div class="line">$mysql_user = &apos;root&apos;;</div><div class="line">$mysql_pass = &apos;s3cret&apos;;</div><div class="line">$mysql_port = 3308;</div></pre></td></tr></table></figure>
<p>这一步也可以不创建配置文件，直接修改<code>/var/lib/zabbix/percona/scripts/ss_get_mysql_stats.php</code>对应的项也可以。</p>
</li>
<li><p>因为percona的脚本有bug需要修改<br>如果mysql不是yum 安装，socket文件不在默认位置，可以修改<br><code>get_mysql_stats_wrapper.sh</code> 中的 <code>HOST=127.0.0.1</code><br>另外需要修改两处<code>CACHEFILE</code>,如果不是默认端口，需要添加上端口号。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">CACHEFILE=&quot;/tmp/$HOST-mysql_cacti_stats.txt:3308&quot;</div><div class="line">TIMEFLM=`stat -c %Y /tmp/$HOST-mysql_cacti_stats.txt:3308`</div></pre></td></tr></table></figure>
<p>测试percona脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/var/lib/zabbix/percona/scripts/get_mysql_stats_wrapper.sh gg</div></pre></td></tr></table></figure>
<p>返回数字表示成功。<br>此时<code>/tmp/127.0.0.1-mysql_cacti_stats.txt\:3308</code>文件的属主是root，修改给<code>zabbix</code> 用户。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /tmp</div><div class="line">chown zabbix:zabbix 127.0.0.1-mysql_cacti_stats.txt\:3308</div></pre></td></tr></table></figure>
</li>
<li><p>配置zabbix 用户连接mysql<br>在 zabbix用户home目录创建.my.cnf文件，并输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[client]</div><div class="line">user=root</div><div class="line">password=s3cret</div></pre></td></tr></table></figure>
<p>修改<code>/var/lib/zabbix/percona/scripts/get_mysql_stats_wrapper.sh</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#RES=`HOME=~zabbix mysql -e &apos;SHOW SLAVE STATUS\G&apos; | egrep &apos;(Slave_IO_Running|Slave_SQL_Running):&apos; | awk -F: &apos;&#123;print $2&#125;&apos; | tr &apos;\n&apos; &apos;,&apos;`</div></pre></td></tr></table></figure>
<p>为自己的mysql命令路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">RES=`/opt/freeware/mysql/bin/mysql -e &apos;SHOW SLAVE STATUS\G&apos; | egrep &apos;(Slave_IO_Running|Slave_SQL_Running):&apos; | awk -F: &apos;&#123;print $2&#125;&apos; | tr &apos;\n&apos; &apos;,&apos;`</div></pre></td></tr></table></figure>
</li>
<li><p>测试zabbix 连接 mysql</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo -u zabbix -H /var/lib/zabbix/percona/scripts/get_mysql_stats_wrapper.sh running-slave</div></pre></td></tr></table></figure>
<p>返回0表示主库，返回1表示从库。</p>
</li>
</ol>
<h3 id="4-Configure-Zabbix-Server"><a href="#4-Configure-Zabbix-Server" class="headerlink" title="4. Configure Zabbix Server"></a>4. Configure Zabbix Server</h3><ol>
<li><p>把 <code>/var/lib/zabbix/percona/templates/zabbix_agent_template_percona_mysql_server_ht_2.0.9-sver1.1.6.xml</code> 下载到本地。</p>
</li>
<li><p>Import the XML template using Zabbix UI (Configuration -&gt; Templates -&gt; Import) by additionally choosing “Screens”.<br>此处有坑，xml文件中有两个”MySQL Graphs”，请修改一个，否则报重复。</p>
</li>
<li><p>Create/edit hosts by assigning them “Percona Templates” group and linking the template “Percona MySQL Server Template” (Templates tab).   </p>
</li>
</ol>
<hr>
<p>Good luck！<br>冬日暖阳</p>
]]></content>
    
    <summary type="html">
    
      zabbix 安装  percona 模板 for mysql
    
    </summary>
    
      <category term="zabbix" scheme="http://mydba.xyz/categories/zabbix/"/>
    
    
  </entry>
  
  <entry>
    <title>新建一篇文章</title>
    <link href="http://mydba.xyz/2016/08/11/second/"/>
    <id>http://mydba.xyz/2016/08/11/second/</id>
    <published>2016-08-11T03:05:02.000Z</published>
    <updated>2016-08-19T06:11:57.355Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Hexo-创建一篇新文章"><a href="#使用Hexo-创建一篇新文章" class="headerlink" title="使用Hexo 创建一篇新文章"></a>使用Hexo 创建一篇新文章</h1><h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><p>在命令行或<code>Git Shell</code> 中切换到Hexo项目，运行下列命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo n &lt;title&gt;  # &lt;title&gt; 文章标题，同时也是文件名</div></pre></td></tr></table></figure></p>
<p>执行完成后，会在项目的<code>source\_posts</code>目录下创建一个markdown文件，例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO  Created: F:\GitHub\myocm\source\_posts\second.md</div></pre></td></tr></table></figure></p>
<h2 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h2><p>使用自己喜欢的markdown编辑器打开上一步hexo创建的markdown文件，使用markdown语法编辑自己的文章。</p>
<h2 id="发布文件"><a href="#发布文件" class="headerlink" title="发布文件"></a>发布文件</h2><p>文章写完后，在命令行或<code>Git Shell</code> 中切换到Hexo项目，运行下列命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g   # 产生可以发布的静态文件</div></pre></td></tr></table></figure></p>
<p>会在项目的public目录下生成网站的静态文件，拷贝所有文件到GitHub的本地文件夹，打开本机GitHub，登录并发布到GitHub服务器即可。 </p>
<p>==========<br>推荐markdown编辑器<br><a href="http://chenguanzhou.github.io/MarkDownEditor/" target="_blank" rel="external">http://chenguanzhou.github.io/MarkDownEditor/</a><br>支持win10，支持本地图片上传到imgur.com 或 七牛</p>
<hr>
<p>Good luck!<br>冬日暖阳</p>
]]></content>
    
    <summary type="html">
    
      如何使用Hexo创建一篇新文章
    
    </summary>
    
      <category term="其他" scheme="http://mydba.xyz/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://mydba.xyz/2016/08/10/hello-world/"/>
    <id>http://mydba.xyz/2016/08/10/hello-world/</id>
    <published>2016-08-10T02:10:10.000Z</published>
    <updated>2016-08-19T06:06:53.418Z</updated>
    
    <content type="html"><![CDATA[<h1 id="你看到的这个页面是怎么来的"><a href="#你看到的这个页面是怎么来的" class="headerlink" title="你看到的这个页面是怎么来的"></a>你看到的这个页面是怎么来的</h1><p>  — 记如何使用GitHub pages 和 Hexo 搭建免费个人博客</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="1-注册GitHub账号"><a href="#1-注册GitHub账号" class="headerlink" title="1. 注册GitHub账号"></a>1. 注册GitHub账号</h3><ul>
<li>登录<a href="https://github.com/" target="_blank" rel="external">GitHub</a> 注册自定义账号。</li>
<li>创建一个新的仓库（repository），name必须和用户名一致,后面跟<br><code>.github.io</code>,如 <code>mycom.github.io</code>,因为<code>.github.io</code>是GitHub pages 的域名。</li>
</ul>
<h3 id="2-注册自己的域名（可选）"><a href="#2-注册自己的域名（可选）" class="headerlink" title="2. 注册自己的域名（可选）"></a>2. 注册自己的域名（可选）</h3><ul>
<li>推荐域名服务商 <a href="http://www.godaddy.com/" target="_blank" rel="external">GoDaddy</a> ，支持支付宝，还可以在网上搜索优惠码。</li>
</ul>
<h3 id="3-下载软件"><a href="#3-下载软件" class="headerlink" title="3. 下载软件"></a>3. 下载软件</h3><ul>
<li>下载<a href="https://windows.github.com/" target="_blank" rel="external">GitHub Windows</a></li>
<li>下载<a href="http://nodejs.org/" target="_blank" rel="external">Node.JS</a></li>
</ul>
<h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><h3 id="1-初始化本机环境"><a href="#1-初始化本机环境" class="headerlink" title="1. 初始化本机环境"></a>1. 初始化本机环境</h3><p>安装GitHub Windows 和 Node.JS 。</p>
<h3 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2. 安装Hexo"></a>2. 安装Hexo</h3><p>打开 Git Shell ,输入如下命令安装<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div><div class="line">npm install hexo --save</div></pre></td></tr></table></figure></p>
<h3 id="3-初始化Hexo"><a href="#3-初始化Hexo" class="headerlink" title="3. 初始化Hexo"></a>3. 初始化Hexo</h3><ul>
<li>创建Hexo文件夹，如 <code>F:\GitHub</code></li>
<li><p>进入<code>Git Shell</code>切换到该路径下<code>F:\GitHub</code>执行下列命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo init &lt;folder&gt;</div><div class="line">cd &lt;folder&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>安装Hexo 插件，在上面的<code>Git Shell</code>窗口中，输入下列命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-index --save</div><div class="line">npm install hexo-generator-archive --save</div><div class="line">npm install hexo-generator-category --save</div><div class="line">npm install hexo-generator-tag --save</div><div class="line">npm install hexo-server --save</div><div class="line">npm install hexo-deployer-git --save</div><div class="line">npm install hexo-deployer-heroku --save</div><div class="line">npm install hexo-deployer-rsync --save</div><div class="line">npm install hexo-deployer-openshift --save</div><div class="line">npm install hexo-renderer-marked --save</div><div class="line">npm install hexo-renderer-stylus --save</div><div class="line">npm install hexo-generator-feed --save</div><div class="line">npm install hexo-generator-sitemap --save</div></pre></td></tr></table></figure>
</li>
<li><p>启动hexo，在本地查看效果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
</li>
</ul>
<p>在浏览器里输入 <code>http://localhost:4000</code><br>如果能看到页面，则表示Hexo初始化成功。</p>
<h3 id="4-发布blog到是GitHub"><a href="#4-发布blog到是GitHub" class="headerlink" title="4. 发布blog到是GitHub"></a>4. 发布blog到是GitHub</h3><ul>
<li><p>手工发布  </p>
<ol>
<li><p>产生静态部署文件<br>在<code>Git Shell</code> 中，输入以下命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g #生成public静态文件</div></pre></td></tr></table></figure>
</li>
<li><p>上传文件到GitHub<br>打开桌面GitHub，输入用户名密码登录GitHub，把自己创建的仓库clone到本地一个文件夹，里面应该是空的。把hexo产生的public文件夹里的文件全部拷贝到GitHub本地的文件夹里。然后在GitHub 里写上备注，commit，然后点击右上角的sync，同步到GitHub 网站。</p>
</li>
<li>部署完成，可以访问自己的GitHub pages域名，如mycom.github.io，查看效果。</li>
</ol>
</li>
<li><p>使用Hexo的一键部署  </p>
<ol>
<li><p>修改根目录的<code>_config.yml</code>文件中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: &lt;repository url&gt;</div><div class="line">  branch: [branch]</div><div class="line">  message: [message]</div></pre></td></tr></table></figure>
<p>指定部署类型为 git<br>指定库地址即可。<br><img src="http://i.imgur.com/BTRsLZn.png" alt=""></p>
</li>
<li>执行部署命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate --deploy</div></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ul>
<h2 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h2><h3 id="1-选择主题"><a href="#1-选择主题" class="headerlink" title="1. 选择主题"></a>1. 选择主题</h3><p>网站的页面布局，扩展功能等在Hexo中是通过主题（themes）来配置和实现的。<br>Hexo 网站有很多主题<a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a>,可以挑选自己喜欢的主题。<br>例如本站使用的<a href="https://github.com/wuchong/jacman" target="_blank" rel="external">Jacman</a>主题。</p>
<h3 id="2-使用主题"><a href="#2-使用主题" class="headerlink" title="2. 使用主题"></a>2. 使用主题</h3><ul>
<li>下载主题<br>选择好自己喜欢的主题后，把主题代码clone到Hexo项目的<code>themes</code>目录。<br>比如下载jacman主题，使用如下命令,在博客的根目录执行<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/wuchong/jacman.git themes/jacman</div></pre></td></tr></table></figure>
</li>
</ul>
<p>下载完成后，可以在<code>themes</code>目录看到<code>jacman</code>目录。</p>
<ul>
<li>启用主题<br>修改你的博客根目录下的<code>_config.yml</code>配置文件中的<code>theme</code>属性，<br>将其设置为你刚刚下载的主题，如<code>jacman</code></li>
<li>配置主题<br>主要是修改主题目录里面的<code>_config.yml</code>配置文件，参照主题说明设置即可。<ul>
<li>本站<code>jacman</code>主题的配置参照<a href="http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/" target="_blank" rel="external">如何使用 Jacman 主题</a><br>对于新手使用<code>jacman</code>主题时，有几处<a href="http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/" target="_blank" rel="external">如何使用 Jacman 主题</a>说的比较简单，列举如下<ol>
<li>什么是<code>front-matter</code>,就是文件最上方用<code>---</code> 隔开的对文件属性进行说明的区域，参考<a href="https://hexo.io/zh-cn/docs/permalinks.html" target="_blank" rel="external">front-matter</a></li>
<li>启用<code>多说</code>评论系统的<code>duoshuo_shortname</code>是指<a href="http://duoshuo.com/create-site/" target="_blank" rel="external">http://duoshuo.com/create-site/</a>里面的多说二级域名。</li>
</ol>
</li>
</ul>
</li>
<li>自定义404页面<br>使用腾讯公益404页面，在博客source目录，建立404.html页面，放入如下代码<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.qq.com/404/search_children.js&quot; charset=&quot;utf-8&quot; homePageUrl=&quot;http://mydba.xyz&quot; homePageName=&quot;回到主页&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>把<code>homePageUrl</code>修改为自己的域名即可。</p>
<h2 id="使用自己的域名"><a href="#使用自己的域名" class="headerlink" title="使用自己的域名"></a>使用自己的域名</h2><h3 id="1-注册域名"><a href="#1-注册域名" class="headerlink" title="1. 注册域名"></a>1. 注册域名</h3><p>参考上面的准备工作</p>
<h3 id="2-在GitHub-设置自己的域名"><a href="#2-在GitHub-设置自己的域名" class="headerlink" title="2. 在GitHub 设置自己的域名"></a>2. 在GitHub 设置自己的域名</h3><p>登录GitHub网站，在自己的博客项目里点击<code>Settings</code>,在  <code>Custom domain</code> 里输入自己的域名，保存。</p>
<h3 id="3-设置域名解析"><a href="#3-设置域名解析" class="headerlink" title="3. 设置域名解析"></a>3. 设置域名解析</h3><p>推荐使用<a href="https://www.dnspod.cn/" target="_blank" rel="external">DNSPod</a>  做域名解析，参考<a href="http://winterttr.me/2015/10/23/from-dns-to-github-custom-domain/" target="_blank" rel="external">http://winterttr.me/2015/10/23/from-dns-to-github-custom-domain/</a></p>
<p>==========<br>主要参考 <a href="https://wsgzao.github.io/post/hexo-guide/" target="_blank" rel="external">https://wsgzao.github.io/post/hexo-guide/</a><br>Hexo <a href="http://hexo.io/" target="_blank" rel="external">http://hexo.io/</a><br>Hexo docs <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/index.html</a><br>jacman  <a href="https://github.com/wuchong/jacman/wiki/%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97" target="_blank" rel="external">https://github.com/wuchong/jacman/wiki/%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97</a></p>
<hr>
<p>Good luck!<br>冬日暖阳</p>
]]></content>
    
    <summary type="html">
    
      你看到的这个页面是怎么来的 --- 记如何使用GitHub pages 和 Hexo 搭建免费个人博客
    
    </summary>
    
      <category term="其他" scheme="http://mydba.xyz/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
</feed>
